From 359de36a39b90516dce92f4cb3b84f934d621daa Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Przemys=C5=82aw=20Kryger?= <pkryger@gmail.com>
Date: Tue, 5 Aug 2025 15:08:47 +0100
Subject: [PATCH] fix: Remove excessive CF_NOESCAPE and CS_NOESCAPE

Analysed all occurrences of CF_NOESCAPE and NS_NOESCAPE and removed
where the annotation seemed to be excessive, for example when the
annotated block has been enqueued in a queue to execute in another loop.

Such a block, may have a an optimised placement as
`NSConcreteGlobalBlock` on stack on a callee side. This happen on
non-Apple clang Apple at least in version 7 (see [1]).

This is slightly different than fully disabling the blocks (see [2],
[3], and [4]), while trying to preserve as much of the NOESCAPES where
it seems to server a purpose.

This partially reverts commit 697acf9b0054093c0d7db6e381310daf0cc9da38.

* src/mac.c (mac_foreach_window_1, mac_foreach_window, mac_map_keymap):
  Restore CF_NOESCAPE.
* src/macappkit.m (mac_within_gui_and_here, mac_autorelease_loop):
  Restore CF_NOESCAPE.
* src/macterm.h (mac_foreach_window, mac_map_keymap) : Restore
  CF_NOESCAPE.
* src/macappkit.h (enumerateChildWindowsUsingBlock): Harmonise
  NS_NOESCAPE placement.
* src/macappkit.m (enumerateChildWindowsUsingBlock): Harmonise
  CF_NOESCAPE placement.

[1] https://github.com/NixOS/nixpkgs/issues/127902#issuecomment-1698365843
[2] https://github.com/jdtsmith/emacs-mac/issues/43
[3] https://github.com/jdtsmith/emacs-mac/pull/48
[4] https://github.com/jdtsmith/emacs-mac/issues/69
---
 src/mac.c       |  6 +++---
 src/macappkit.h |  4 ++--
 src/macappkit.m | 12 ++++++------
 src/macterm.h   |  4 ++--
 4 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/mac.c b/src/mac.c
index f2a82350e68..53f4e507b4c 100644
--- a/src/mac.c
+++ b/src/mac.c
@@ -138,7 +138,7 @@ mac_string_to_four_char_code (Lisp_Object string, FourCharCode *code)
 
 static bool
 mac_foreach_window_1 (struct window *w,
-		      bool (^block) (struct window *))
+		      bool (CF_NOESCAPE ^block) (struct window *))
 {
   bool cont;
 
@@ -161,7 +161,7 @@ mac_foreach_window_1 (struct window *w,
 
 void
 mac_foreach_window (struct frame *f,
-		    bool (^block) (struct window *))
+		    bool (CF_NOESCAPE ^block) (struct window *))
 {
   AUTO_LIST2 (rest, f->tool_bar_window, f->tab_bar_window);
 
@@ -196,7 +196,7 @@ mac_map_keymap_function (Lisp_Object key, Lisp_Object val,
 
 void
 mac_map_keymap (Lisp_Object map, bool autoload,
-		void (^block) (Lisp_Object key, Lisp_Object val))
+		void (CF_NOESCAPE ^block) (Lisp_Object key, Lisp_Object val))
 {
   map_keymap (map, mac_map_keymap_function, Qnil, block, autoload);
 }
diff --git a/src/macappkit.h b/src/macappkit.h
index 1b0100c4bf5..e371f4c1224 100644
--- a/src/macappkit.h
+++ b/src/macappkit.h
@@ -508,8 +508,8 @@ typedef NSInteger NSGlyphProperty;
 @interface NSWindow (Emacs)
 - (Lisp_Object)lispFrame;
 - (NSWindow *)topLevelWindow;
-- (void)enumerateChildWindowsUsingBlock:(NS_NOESCAPE void
-					 (^)(NSWindow *child, BOOL *stop))block;
+- (void)enumerateChildWindowsUsingBlock:(void
+					 (NS_NOESCAPE ^)(NSWindow *child, BOOL *stop))block;
 @end
 
 @interface NSCursor (Emacs)
diff --git a/src/macappkit.m b/src/macappkit.m
index 8a47b63e198..c3e37d5545a 100644
--- a/src/macappkit.m
+++ b/src/macappkit.m
@@ -110,7 +110,7 @@
 #endif
 
 static void mac_within_gui_and_here (void (^) (void),
-				     void (^) (void));
+                                     void (CF_NOESCAPE ^) (void));
 static void mac_within_gui_allowing_inner_lisp (void (^) (void));
 static void mac_within_lisp (void (^) (void));
 static void mac_within_lisp_deferred_unless_popup (void (^) (void));
@@ -627,8 +627,8 @@ - (NSWindow *)topLevelWindow
    descendant windows.  Set *stop to YES in the block to abort further
    processing of the child windows subtree.  */
 
-- (void)enumerateChildWindowsUsingBlock:(NS_NOESCAPE void
-					 (^)(NSWindow *child, BOOL *stop))block
+- (void)enumerateChildWindowsUsingBlock:(void
+					 (NS_NOESCAPE ^)(NSWindow *child, BOOL *stop))block
 {
   for (NSWindow *childWindow in self.childWindows)
     {
@@ -901,7 +901,7 @@ - (void)orderOut:(id)sender
 
 #if MAC_USE_AUTORELEASE_LOOP
 void
-mac_autorelease_loop (Lisp_Object (^body) (void))
+mac_autorelease_loop (Lisp_Object (CF_NOESCAPE ^body) (void))
 {
   Lisp_Object val;
 
@@ -1017,7 +1017,7 @@ - (void)orderOut:(id)sender
 
 static void
 mac_with_current_drawing_appearance (NSAppearance *appearance,
-				     void (NS_NOESCAPE ^block) (void))
+                                     void (NS_NOESCAPE ^block) (void))
 {
   if (
 #if __clang_major__ >= 9
@@ -16657,7 +16657,7 @@ - (void)sound:(NSSound *)sound didFinishPlaying:(BOOL)finishedPlaying
 
 static void
 mac_within_gui_and_here (void (^block_gui) (void),
-			 void (^block_here) (void))
+                         void (CF_NOESCAPE ^block_here) (void))
 {
   eassert (!pthread_main_np ());
   eassert (mac_gui_queue.count <= 1);
diff --git a/src/macterm.h b/src/macterm.h
index 31a52875ab9..12d7f62e91a 100644
--- a/src/macterm.h
+++ b/src/macterm.h
@@ -563,9 +563,9 @@ extern struct mac_operating_system_version
 extern Lisp_Object mac_four_char_code_to_string (FourCharCode);
 extern bool mac_string_to_four_char_code (Lisp_Object, FourCharCode *);
 extern void mac_foreach_window (struct frame *,
-				bool (^) (struct window *));
+				bool (CF_NOESCAPE ^) (struct window *));
 extern void mac_map_keymap (Lisp_Object, bool,
-			    void (^) (Lisp_Object, Lisp_Object));
+			    void (CF_NOESCAPE ^) (Lisp_Object, Lisp_Object));
 extern Lisp_Object mac_aedesc_to_lisp (const AEDesc *);
 extern OSErr mac_ae_put_lisp (AEDescList *, UInt32, Lisp_Object);
 extern OSErr create_apple_event_from_lisp (Lisp_Object, AppleEvent *);
-- 
2.50.1

